# ${project_name}

Each branch of this repository is associated with an HCP Terraform workspace. Each HCP Terraform workspace is configured to retrieve Azure dynamic credentials, valid for the length of the plan or apply, [from HCP Vault Dedicated](https://developer.hashicorp.com/terraform/cloud-docs/workspaces/dynamic-provider-credentials/vault-backed/azure-configuration). Dynamic credentials for this project create a new client secret for an existing persistent service principal on each run.

## HCP Terraform Details

All HCP Terraform workspaces are configured in the following HCP Terraform organization: ${hcptf_org}

## Production
### Terraform Project & Workspace

| HCP Terraform Project | HCP Terraform Workspace |
|-----------------------|-------------------------|
| ${prod_project}       | ${prod_workspace}       |

### Clone a local copy [main]

| Clone Protocol | Syntax |
|----------------|--------|
| HTTPS | git clone ${repo_clone_http} |
| SSH | git clone ${repo_clone_ssh} |
| GitHub CLI | gh repo clone ${repo_name} |

## Staging
### Terraform Project & Workspace

| HCP Terraform Project | HCP Terraform Workspace |
|-----------------------|-------------------------|
| ${stage_project}      | ${stage_workspace}      |

### Clone a local copy [stage]

| Clone Protocol | Syntax |
|----------------|--------|
| HTTPS | git clone -b stage ${repo_clone_http} |
| SSH | git clone -b stage ${repo_clone_ssh} |
| GitHub CLI | gh repo clone ${repo_name} -- --branch stage |

## Development
### Terraform Project & Workspace

| HCP Terraform Project | HCP Terraform Workspace |
|-----------------------|-------------------------|
| ${dev_project}        | ${dev_workspace}        |

### Clone a local copy [dev]

| Clone Protocol | Syntax |
|----------------|--------|
| HTTPS | git clone -b dev ${repo_clone_http} |
| SSH | git clone -b dev ${repo_clone_ssh} |
| GitHub CLI | gh repo clone ${repo_name} -- --branch dev |

## ⚡️ Quickstart

Run the following command(s) in the repository folder after cloning to verify dynamic credentials are working as expected.

```
terraform init
terraform plan
```